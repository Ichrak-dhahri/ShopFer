trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  SONAR_TOKEN: $(SonarQubeToken)  # À définir comme variable secrète dans Azure DevOps

steps:

# Étape 1 : Installer Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

# Étape 2 : Installer Angular CLI et les dépendances
- script: |
    npm install -g @angular/cli
    npm install
  displayName: 'Install Angular dependencies'

# Étape 3 : Build Angular
- script: |
    ng build --configuration production
  displayName: 'Build Angular App'

# Étape 4 : Lancer les tests unitaires
- script: |
    ng test --watch=false --browsers=ChromeHeadless --code-coverage
  displayName: 'Run Unit Tests (Karma + Jasmine)'

# Étape 5 : Préparer l’analyse SonarQube
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQubeServiceConnection'  # Configure ce service dans Azure DevOps
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'E-commerce-App-main'
    cliProjectName: 'E-commerce-App-main'
    cliProjectVersion: '1.0'
    cliSources: 'src'
    extraProperties: |
      sonar.host.url=http://localhost:9000
      sonar.token=$(SONAR_TOKEN)
      sonar.sourceEncoding=UTF-8
      sonar.tests=src
      sonar.test.inclusions=**/*.spec.ts,**/*.test.ts
      sonar.typescript.lcov.reportPaths=coverage/lcov.info
      sonar.exclusions=**/assets/js/script.js,**/node_modules/**,**/dist/**,**/build/**

# Étape 6 : Analyse SonarQube
- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Analysis'

# Étape 7 : Publier les résultats SonarQube
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube Results'

# Étape 8 : Installer Python + Robot Framework + Selenium
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
  displayName: 'Use Python 3.x'

- script: |
    python -m pip install --upgrade pip
    pip install robotframework selenium
  displayName: 'Install Robot Framework & Selenium'

# Étape 9 : Exécuter les tests end-to-end
- script: |
    robot tests/  # Modifie si ton répertoire de tests a un autre nom
  displayName: 'Run Robot Framework Tests'
