# See https://docs.github.com/get-started/getting-started-with-git/ignoring-files for more about ignoring files.

# Compiled output
/dist
/tmp
/out-tsc
/bazel-out

# Node
/node_modules
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# Miscellaneous
/.angular/cache
.sass-cache/
/connect.lock
/coverage
/libpeerconnection.log
testem.log
/typings

# System files
.DS_Store
Thumbs.db

# Ignore Karma config file
karma.conf.js

# Ignore SonarQube project configuration
sonar-project.properties

# Test coverage reports
coverage/
.scannerwork/

# Robot Framework test artifacts
robot-tests/*.log
robot-tests/selenium-screenshot-*.png

# === Terraform ===
# Local .terraform directories
**/.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# === Docker ===
# Docker
.dockerignore

# === Environment Variables ===
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# === Firebase ===
.firebase/
firebase-debug.log
.firebaserc

# === Additional Security ===
# SSH keys
*.pem
*.key

# Credentials and secrets
secrets/
credentials/
*.credentials

# === Logs ===
*.log
logs/

# === Build outputs ===
build/

# === Package managers ===
# Uncomment if you want to ignore lock files
# package-lock.json
# yarn.lock